# Solution 1:
class Solution:
    def getIndicies(self, s, c):
        indicies = []
        for i in range(len(s)):
            if s[i] == c:
                indicies.append(i)
        return indicies
    def getShortest(self, idx, indicies):
        if idx in indicies: return 0
        if idx < indicies[0]: return abs(idx - indicies[0])
        elif idx > indicies[-1]: return abs(indicies[-1] - idx)
        for index in range(len(indicies)):
            if indicies[index] > idx:
                minDistance = min(abs(idx - indicies[index]), abs(idx - indicies[index - 1]))
                return minDistance
    def shortestToChar(self, s: str, c: str) -> List[int]:
        indicies = sorted(self.getIndicies(s, c), key=lambda x:x)
        result = []
        for i in range(len(s)):
            result.append(self.getShortest(i, indicies))
        return result

# Solution 2:
class Solution:
    def shortestToChar(self, s: str, c: str) -> List[int]:
        indices = [i for i in range(len(s)) if s[i] == c]
        idx = 0
        out = []
        for i in range(len(s)):
            dist = abs(i - indices[idx])
            if idx + 1 < len(indices) and abs(i - indices[idx+1]) <= dist:
                idx += 1
                dist = abs(i - indices[idx])
            out.append(dist)
        return out
