# Solution 1:
class Solution:
    def isThree(self, n: int) -> bool:
        if n <= 0:
            return False
        else:
            d = []
            for m in range(1, n+1):
                if n % m == 0:
                    d.append(m)
        return len(set(d)) == 3
# Solution 2: 
# 1 <= n <= 10^4
from math import sqrt


class Solution:
    def isThree(self, n: int) -> bool:
        return n in {4, 9, 25, 49, 121, 169, 289, 361, 529, 841, 961, 1369, 1681, 1849, 2209, 2809, 3481, 3721, 4489, 5041, 5329, 6241, 6889, 7921, 9409} # numbers that have 3 divisors in 1~10000

# Solution 3:
class Solution:
    def isThree(self, n: int) -> bool:
        c=0
        for i in range(1,n+1):
            if n%i==0:
                c+=1
        return c == 3
