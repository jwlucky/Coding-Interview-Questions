# Solution 1:
class Solution:
    def hardestWorker(self, n: int, logs: List[List[int]]) -> int:
        t = [logs[0][1]]
        em_id = []
        
        for i in range(1, len(logs)):
            t.append(logs[i][1] - logs[i-1][1])

        for j in range(len(t)):
            if t[j] == max(t):
                em_id.append(logs[j][0])
        return min(em_id)

# Solution 2:
class Solution:
    def hardestWorker(self, n: int, logs: List[List[int]]) -> int:
        longest_time = best_id = time = 0
        for log in logs:
            cur_id, cur_time = log[0], log[1]
            task_time = cur_time - time
            if task_time > longest_time or task_time == longest_time and cur_id < best_id:
                longest_time = task_time
                best_id = cur_id
            time = cur_time
        return best_id

# Solution 3:
class Solution:
    def hardestWorker(self, n: int, logs: List[List[int]]) -> int:
        e = logs[0][0]
        mx = logs[0][1]
        for i in range(1,len(logs)):
            units = logs[i][1] - logs[i-1][1]
            if  units > mx:
                mx = units
                e = logs[i][0]
            if units == mx:
                if logs[i][0] < e:
                    e = logs[i][0]
        return e
        
