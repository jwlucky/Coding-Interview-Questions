# Solution 1:
class Solution:
    def findJudge(self, N: int, trust: List[List[int]]) -> int:
        in_degree = [0] * (N + 1)
        out_degree = [0] * (N + 1)
        for a in trust:
            out_degree[a[0]] += 1
            in_degree[a[1]] += 1
        for i in range(1, N + 1):
            if in_degree[i] == N - 1 and out_degree[i] == 0:
                return i
        return -1
# Solution 2:
class Solution:
    def findJudge(self, n: int, trust: List[List[int]]) -> int:
        # Array to store the count of people each person trusts
        trust_count = [0] * (n+1)
        
        # Array to store the count of people who trust each person
        trusted_count = [0] * (n+1)
        
        for a, b in trust:
            trust_count[a] +=1
            trusted_count[b] +=1
            
        for i in range(1, n +1):
            # Check if the person trusts no one and is trusted by everyone else
            if trust_count[i] == 0 and trusted_count[i] == n-1:
                return i
            
        return -1

            

        
